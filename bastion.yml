AWSTemplateFormatVersion: 2010-09-09

Description: > 
  Reference Architecture to host WordPress on AWS - Creates bastion 
  (desired:0; min:0; max:1) Auto Scaling group

Parameters:
  EnvironmentName:
    Description: An environment name that should match the name used to create the network.
    Type: String

  SshAccessCidr:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    Description: The CIDR IP range that is permitted to SSH to bastion instance. Note - a value of 0.0.0.0/0 will allow access from ANY IP address.
    Type: String
    Default: 0.0.0.0/0

  BastionInstanceType:
    AllowedValues:
      - t2.nano 
      - t2.micro 
      - t2.small 
      - t2.medium 
      - t2.large 
    ConstraintDescription: Must be a valid Amazon EC2 instance type.
    Default: t2.nano
    Description: Bastion EC2 instance type.
    Type: String

  EC2KeyName:
    Description: Name of an EC2 KeyPair. Your bastion instances will launch with this KeyPair.
    Type: AWS::EC2::KeyPair::KeyName

Mappings:
  RegionMap:
    eu-central-1:
      AMI: ami-0ec1ba09723e5bfac
    us-west-2:
      AMI: ami-0ce21b51cb31a48b8

Resources:
  BastionSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for Bastion instances
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref SshAccessCidr
      VpcId: 
        Fn::ImportValue: !Sub "${EnvironmentName}-VPCID"  

  BastionAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      Cooldown: '60'
      HealthCheckGracePeriod: 120
      HealthCheckType: EC2
      LaunchConfigurationName: !Ref BastionLaunchConfiguration
      MaxSize: '1'
      MinSize: '0'
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Bastion
          PropagateAtLaunch: true
      VPCZoneIdentifier:
        - Fn::ImportValue: !Sub "${EnvironmentName}-PUB1-SN" 
        - Fn::ImportValue: !Sub "${EnvironmentName}-PUB2-SN" 
  
  BastionLaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      IamInstanceProfile: !Ref BastionInstanceProfile
      ImageId: !FindInMap [ RegionMap, !Ref 'AWS::Region', AMI ]
      InstanceMonitoring: true
      InstanceType: !Ref BastionInstanceType
      KeyName: !Ref EC2KeyName
      SecurityGroups:
        - !Ref BastionSecurityGroup
  
  BastionInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: '/'
      Roles:
        - !Ref BastionInstanceRole
  
  BastionInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: '/'
      Policies:
        - PolicyName: logs
          PolicyDocument:
            Version: 2012-10-17
            Statement:
            - Effect: Allow
              Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
              - logs:DescribeLogStreams
              Resource:
              - arn:aws:logs:*:*:*

Outputs:
  BastionSecurityGroupId:
    Description: Bastion SecurityGroup Export
    Value: !GetAtt BastionSecurityGroup.GroupId
    Export:
      Name: !Sub "${EnvironmentName}-BastionSecurityGroupID" 